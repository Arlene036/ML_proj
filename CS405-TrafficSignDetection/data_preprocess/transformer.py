import json
import os
import numpy as np
from PIL import Image  

classes = [
    "pl80",
    "w9",
    "p6",
    "ph4.2",
    "i8",
    "w14",
    "w33",
    "pa13",
    "im",
    "w58",
    "pl90",
    "il70",
    "p5",
    "pm55",
    "pl60",
    "ip",
    "p11",
    "pdd",
    "wc",
    "i2r",
    "w30",
    "pmr",
    "p23",
    "pl15",
    "pm10",
    "pss",
    "w1",
    "p4",
    "w38",
    "w50",
    "w34",
    "pw3.5",
    "iz",
    "w39",
    "w11",
    "p1n",
    "pr70",
    "pd",
    "pnl",
    "pg",
    "ph5.3",
    "w66",
    "il80",
    "pb",
    "pbm",
    "pm5",
    "w24",
    "w67",
    "w49",
    "pm40",
    "ph4",
    "w45",
    "i4",
    "w37",
    "ph2.6",
    "pl70",
    "ph5.5",
    "i14",
    "i11",
    "p7",
    "p29",
    "pne",
    "pr60",
    "pm13",
    "ph4.5",
    "p12",
    "p3",
    "w40",
    "pl5",
    "w13",
    "pr10",
    "p14",
    "i4l",
    "pr30",
    "pw4.2",
    "w16",
    "p17",
    "ph3",
    "i9",
    "w15",
    "w35",
    "pa8",
    "pt",
    "pr45",
    "w17",
    "pl30",
    "pcs",
    "pctl",
    "pr50",
    "ph4.4",
    "pm46",
    "pm35",
    "i15",
    "pa12",
    "pclr",
    "i1",
    "pcd",
    "pbp",
    "pcr",
    "w28",
    "ps",
    "pm8",
    "w18",
    "w2",
    "w52",
    "ph2.9",
    "ph1.8",
    "pe",
    "p20",
    "w36",
    "p10",
    "pn",
    "pa14",
    "w54",
    "ph3.2",
    "p2",
    "ph2.5",
    "w62",
    "w55",
    "pw3",
    "pw4.5",
    "i12",
    "ph4.3",
    "phclr",
    "i10",
    "pr5",
    "i13",
    "w10",
    "p26",
    "w26",
    "p8",
    "w5",
    "w42",
    "il50",
    "p13",
    "pr40",
    "p25",
    "w41",
    "pl20",
    "ph4.8",
    "pnlc",
    "ph3.3",
    "w29",
    "ph2.1",
    "w53",
    "pm30",
    "p24",
    "p21",
    "pl40",
    "w27",
    "pmb",
    "pc",
    "i6",
    "pr20",
    "p18",
    "ph3.8",
    "pm50",
    "pm25",
    "i2",
    "w22",
    "w47",
    "w56",
    "pl120",
    "ph2.8",
    "i7",
    "w12",
    "pm1.5",
    "pm2.5",
    "w32",
    "pm15",
    "ph5",
    "w19",
    "pw3.2",
    "pw2.5",
    "pl10",
    "il60",
    "w57",
    "w48",
    "w60",
    "pl100",
    "pr80",
    "p16",
    "pl110",
    "w59",
    "w64",
    "w20",
    "ph2",
    "p9",
    "il100",
    "w31",
    "w65",
    "ph2.4",
    "pr100",
    "p19",
    "ph3.5",
    "pa10",
    "pcl",
    "pl35",
    "p15",
    "w7",
    "pa6",
    "phcs",
    "w43",
    "p28",
    "w6",
    "w3",
    "w25",
    "pl25",
    "il110",
    "p1",
    "w46",
    "pn-2",
    "w51",
    "w44",
    "w63",
    "w23",
    "pm20",
    "w8",
    "pmblr",
    "w4",
    "i5",
    "il90",
    "w21",
    "p27",
    "pl50",
    "pl65",
    "w61",
    "ph2.2",
    "pm2",
    "i3",
    "pa18",
    "pw4"
  ]

cls_name:np.ndarray = np.array(classes)

def writeObj(path_txt, lst_objs, img_shape):
    width = img_shape[0]
    height = img_shape[1]
    with open(path_txt, mode = 'w') as f:
        for obj in lst_objs:
            dic_obj:dict = dict(obj)
            dic_box:dict = dic_obj.get('bbox')
            box_width:int = dic_box.get('xmax') - dic_box.get('xmin')
            box_height:int = dic_box.get('ymax') - dic_box.get('ymin')
            x_center = (dic_box.get('xmax') + dic_box.get('xmin'))/2
            y_center = (dic_box.get('ymax') + dic_box.get('ymin'))/2
            f.write(str(np.argwhere(cls_name == dic_obj.get('category'))[0, 0]))
            f.write(' ')
            f.write(str(x_center/width))
            f.write(' ')
            f.write(str(y_center/height))
            f.write(' ')
            f.write(str(box_width/width))
            f.write(' ')
            f.write(str(box_height/height))
            f.write('\n')
                
                
    

path_json = os.path.abspath("L:/Proj/yolov5-master/yolov5-master/dataset/yolo_TTK100/images/annotations_all.json")
with open(file = path_json, mode = 'r') as file_json:
    dic_labels:dict = json.load(file_json)
    dic_imgs:dict = dic_labels.get('imgs')
    for k in dic_imgs.keys():
        img:dict = dic_imgs.get(k)
        str_fileName:str = img.get('path')
        lst_fileName = str_fileName.split('/')
        str_txtName:str = str(img.get('id')) + '.txt'
        
        print("handdling with " + str_txtName)
        
        path_txt = os.path.join(os.path.abspath("L:/Proj/yolov5-master/yolov5-master/dataset/yolo_TTK100/labels"),
                                lst_fileName[0],
                                str_txtName)
        lst_objs:list = img.get('objects')
        img_shape = Image.open(os.path.join(os.path.abspath("L:\Proj\yolov5-master\yolov5-master\dataset\yolo_TTK100\images"), str_fileName)).size
        
        writeObj(path_txt, lst_objs, img_shape)